{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "63876861",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-08-30T19:27:42.201673Z",
     "iopub.status.busy": "2025-08-30T19:27:42.201456Z",
     "iopub.status.idle": "2025-08-30T19:27:43.819585Z",
     "shell.execute_reply": "2025-08-30T19:27:43.818661Z"
    },
    "papermill": {
     "duration": 1.621958,
     "end_time": "2025-08-30T19:27:43.820867",
     "exception": false,
     "start_time": "2025-08-30T19:27:42.198909",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/qwen2-5-0-5b-instruct/__huggingface_repos__.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/model.safetensors.index.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/config.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/merges.txt\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/model-00001-of-00002.safetensors\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/LICENSE\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/model-00002-of-00002.safetensors\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/README.md\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/tokenizer.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/vocab.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.gitattributes\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/generation_config.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/.gitignore\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer_config.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/LICENSE.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/merges.txt.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model.safetensors.index.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model.safetensors.index.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer_config.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/.gitattributes.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/merges.txt.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/config.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00001-of-00002.safetensors.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/generation_config.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/vocab.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/.gitattributes.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00001-of-00002.safetensors.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00002-of-00002.safetensors.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/generation_config.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/vocab.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/config.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/LICENSE.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/README.md.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/README.md.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00002-of-00002.safetensors.lock\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model.safetensors.index.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00003-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/config.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/merges.txt\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00001-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/tokenizer.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/vocab.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/tokenizer_config.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/chat_template.jinja\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00004-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/special_tokens_map.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00002-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/added_tokens.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/Modelfile\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/generation_config.json\n",
      "/kaggle/input/qwen2-5-0-5b/config.json\n",
      "/kaggle/input/qwen2-5-0-5b/merges.txt\n",
      "/kaggle/input/qwen2-5-0-5b/LICENSE\n",
      "/kaggle/input/qwen2-5-0-5b/README.md\n",
      "/kaggle/input/qwen2-5-0-5b/tokenizer.json\n",
      "/kaggle/input/qwen2-5-0-5b/vocab.json\n",
      "/kaggle/input/qwen2-5-0-5b/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-0-5b/model.safetensors\n",
      "/kaggle/input/qwen2-5-0-5b/.gitattributes\n",
      "/kaggle/input/qwen2-5-0-5b/generation_config.json\n",
      "/kaggle/input/jigsaw-agile-community-rules/sample_submission.csv\n",
      "/kaggle/input/jigsaw-agile-community-rules/train.csv\n",
      "/kaggle/input/jigsaw-agile-community-rules/test.csv\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/finetune.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/__huggingface_repos__.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/requirements.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/runs/Jul31_16-45-02_55092aac9317/events.out.tfevents.1753980309.55092aac9317.383.0\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/runs/Jul31_15-39-22_55092aac9317/events.out.tfevents.1753976368.55092aac9317.105.0\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/trainer_state.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/training_args.bin\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/scaler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/chat_template.jinja\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/scheduler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/optimizer.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/rng_state.pth\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/trainer_state.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/training_args.bin\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/scaler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/chat_template.jinja\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/scheduler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/optimizer.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/rng_state.pth\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/chat_template.jinja\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothCPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothXPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothAlignPropTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothKTOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothOnlineDPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothPPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothGKDTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothRLOOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothSFTTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothORPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothGRPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothDPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothBCOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothRewardTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothPRMTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothIterativeSFTTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothDDPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothNashMDTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/run-hw5zv8tr.wandb\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/logs/debug.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/logs/debug-internal.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/wandb-summary.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/config.yaml\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/output.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/requirements.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/wandb-metadata.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/run-m41n1c6s.wandb\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/logs/debug.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/logs/debug-internal.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/wandb-summary.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/config.yaml\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/output.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/requirements.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/wandb-metadata.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/31349551d90c7606f325fe0f11bbb8bd5fa0d7c7.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/c8dd4c904ea9bfc3cbaaa50075c13a9a1dab52c9.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/4783fe10ac3adce15ac8f358ef5462739852c569.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/630e242dd9b9ba3ac98f68aecd23f65ec95efa7e.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/c2aa2851ea30d00c2c99a92741925741fb894100.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/2f2f7ed8cf1b5a91f2bbb383cb767e679c0a6aed.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/refs/main\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/31349551d90c7606f325fe0f11bbb8bd5fa0d7c7\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/630e242dd9b9ba3ac98f68aecd23f65ec95efa7e\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/c2aa2851ea30d00c2c99a92741925741fb894100\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/2f2f7ed8cf1b5a91f2bbb383cb767e679c0a6aed\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/c8dd4c904ea9bfc3cbaaa50075c13a9a1dab52c9\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/4783fe10ac3adce15ac8f358ef5462739852c569\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/.no_exist/6a59d74d1eaf2f3687e7caa03723f01ace6cdafb/chat_template.jinja\n"
     ]
    }
   ],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "import os\n",
    "\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a01333ab",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-30T19:27:43.828111Z",
     "iopub.status.busy": "2025-08-30T19:27:43.827709Z",
     "iopub.status.idle": "2025-08-30T19:51:23.143610Z",
     "shell.execute_reply": "2025-08-30T19:51:23.142679Z"
    },
    "papermill": {
     "duration": 1419.32017,
     "end_time": "2025-08-30T19:51:23.144905",
     "exception": false,
     "start_time": "2025-08-30T19:27:43.824735",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.7/43.7 kB\u001b[0m \u001b[31m1.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.5/9.5 MB\u001b[0m \u001b[31m73.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m315.1/315.1 kB\u001b[0m \u001b[31m26.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.6/3.6 MB\u001b[0m \u001b[31m92.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m84.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m64.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m57.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m6.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m30.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m2.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m72.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-08-30 19:29:08.202369: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1756582148.383696      19 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1756582148.436606      19 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9f5ba2bd96954883ad5ff777be273a80",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "4f00aa156eaa42bbadbf4d7a57250d9f",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.json: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "198f092f435d41dd86a963df486baf01",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "merges.txt: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "bc8496487ebb4f1c9488288c41acbb46",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer.json: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "===== Fold 1/5 =====\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "9ae6e87c34bc4536a18526e70c7bc1aa",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/681 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c00b80bbf66949138403268ea966a032",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/988M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 03:45, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>3.530500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.107900</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 1 to /kaggle/working/qwen25_ce_headonly/fold1\n",
      "Fold 1 AUC: 0.5775\n",
      "\n",
      "===== Fold 2/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 03:48, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>5.055600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.854700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 2 to /kaggle/working/qwen25_ce_headonly/fold2\n",
      "Fold 2 AUC: 0.5742\n",
      "\n",
      "===== Fold 3/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 03:49, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>5.256400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.889400</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 3 to /kaggle/working/qwen25_ce_headonly/fold3\n",
      "Fold 3 AUC: 0.5723\n",
      "\n",
      "===== Fold 4/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 03:49, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>4.976000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.757200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 4 to /kaggle/working/qwen25_ce_headonly/fold4\n",
      "Fold 4 AUC: 0.5244\n",
      "\n",
      "===== Fold 5/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 03:48, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>5.168900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.900900</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 5 to /kaggle/working/qwen25_ce_headonly/fold5\n",
      "Fold 5 AUC: 0.5331\n",
      "\n",
      "OOF AUC: 0.5551\n",
      "Saved folds under: /kaggle/working/qwen25_ce_headonly\n"
     ]
    }
   ],
   "source": [
    "# ===== Qwen2.5-0.5B cross-encoder, head-only training, 5-fold =====\n",
    "!pip -q install \"transformers==4.44.2\" \"accelerate==0.33.0\"\n",
    "\n",
    "import os, gc, warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn.metrics import roc_auc_score\n",
    "\n",
    "import torch\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "\n",
    "from transformers import (\n",
    "    AutoTokenizer,\n",
    "    AutoModelForSequenceClassification,\n",
    "    DataCollatorWithPadding,\n",
    "    Trainer,\n",
    "    TrainingArguments,\n",
    "    set_seed,\n",
    ")\n",
    "\n",
    "# ---------------- Config ----------------\n",
    "DATA_DIR  = \"/kaggle/input/jigsaw-agile-community-rules\"\n",
    "TRAIN_CSV = f\"{DATA_DIR}/train.csv\"\n",
    "\n",
    "MODEL_ID  = \"Qwen/Qwen2.5-0.5B\"    # small & stable\n",
    "OUT_ROOT  = \"/kaggle/working/qwen25_ce_headonly\"\n",
    "os.makedirs(OUT_ROOT, exist_ok=True)\n",
    "\n",
    "SEED=42; N_FOLDS=5\n",
    "MAX_LEN=256\n",
    "EPOCHS=2\n",
    "TRAIN_BS=4\n",
    "GRAD_ACC=4\n",
    "LR=2e-4\n",
    "WARMUP=0.05\n",
    "\n",
    "set_seed(SEED)\n",
    "device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n",
    "\n",
    "# ------------- Build paired inputs -------------\n",
    "def _clip(x):\n",
    "    x = \"\" if pd.isna(x) else str(x).strip()\n",
    "    return x if 0 < len(x) < 300 else \"\"\n",
    "\n",
    "def build_text_a(row):\n",
    "    sub  = str(row[\"subreddit\"])\n",
    "    rule = str(row[\"rule\"])\n",
    "    pos1 = _clip(row.get(\"positive_example_1\",\"\"))\n",
    "    neg1 = _clip(row.get(\"negative_example_1\",\"\"))\n",
    "    parts = [f\"r/{sub}\", f\"Rule: {rule}\"]\n",
    "    if pos1: parts.append(f\"Yes: {pos1}\")\n",
    "    if neg1: parts.append(f\"No: {neg1}\")\n",
    "    return \" | \".join(parts)\n",
    "\n",
    "def prepare_df(df):\n",
    "    df = df.copy()\n",
    "    df[\"text_a\"] = df.apply(build_text_a, axis=1)\n",
    "    df[\"text_b\"] = df[\"body\"].astype(str)\n",
    "    return df\n",
    "\n",
    "df = pd.read_csv(TRAIN_CSV)\n",
    "df = prepare_df(df)\n",
    "y  = df[\"rule_violation\"].astype(int).values\n",
    "\n",
    "# ------------- Tokenizer (set PAD) -------------\n",
    "tok = AutoTokenizer.from_pretrained(MODEL_ID, use_fast=True, trust_remote_code=True)\n",
    "# Use EOS as PAD if PAD missing\n",
    "if tok.pad_token is None:\n",
    "    if tok.eos_token is None:\n",
    "        tok.add_special_tokens({\"eos_token\":\"</s>\"})\n",
    "    tok.pad_token = tok.eos_token\n",
    "tok.padding_side = \"right\"  # OK for seq cls\n",
    "\n",
    "collator = DataCollatorWithPadding(tokenizer=tok)\n",
    "\n",
    "# ------------- Dataset -------------\n",
    "class PairDataset(Dataset):\n",
    "    def __init__(self, df, labels=None, max_len=256):\n",
    "        self.a = df[\"text_a\"].tolist()\n",
    "        self.b = df[\"text_b\"].tolist()\n",
    "        self.labels = labels\n",
    "        self.max_len = max_len\n",
    "    def __len__(self): return len(self.a)\n",
    "    def __getitem__(self, i):\n",
    "        item = tok(self.a[i], self.b[i], truncation=True, max_length=self.max_len)\n",
    "        if self.labels is not None:\n",
    "            item[\"labels\"] = torch.tensor(int(self.labels[i]), dtype=torch.long)  # <-- important\n",
    "        return item\n",
    "\n",
    "# ------------- Model builder (freeze base, train head) -------------\n",
    "def build_headonly_model():\n",
    "    model = AutoModelForSequenceClassification.from_pretrained(\n",
    "        MODEL_ID,\n",
    "        num_labels=2,\n",
    "        trust_remote_code=True,\n",
    "        torch_dtype=torch.float32,\n",
    "    )\n",
    "    model.config.use_cache = False\n",
    "\n",
    "    # ensure PAD token id is set\n",
    "    model.config.pad_token_id = tok.pad_token_id\n",
    "    model.config.problem_type = \"single_label_classification\"\n",
    "\n",
    "    # keep embeddings in sync if special tokens were added\n",
    "    if model.get_input_embeddings().num_embeddings != len(tok):\n",
    "        model.resize_token_embeddings(len(tok))\n",
    "\n",
    "    # build fresh classifier head in SAME dtype/device as the base model\n",
    "    # base_dtype  = next(model.parameters()).dtype\n",
    "    # base_device = next(model.parameters()).device\n",
    "    hidden = model.config.hidden_size\n",
    "\n",
    "    model.score = torch.nn.Linear(hidden, 2) # , bias=True, device=base_device, dtype=base_dtype\n",
    "    torch.nn.init.xavier_uniform_(model.score.weight)\n",
    "    torch.nn.init.zeros_(model.score.bias)\n",
    "\n",
    "    # freeze everything except the classifier head\n",
    "    for n, p in model.named_parameters():\n",
    "        p.requires_grad = (\"score\" in n)\n",
    "\n",
    "    return model.to(device)\n",
    "\n",
    "\n",
    "\n",
    "# ------------- CV Train -------------\n",
    "skf = StratifiedKFold(n_splits=N_FOLDS, shuffle=True, random_state=SEED)\n",
    "oof = np.zeros(len(df), dtype=float)\n",
    "\n",
    "for fold, (trn_idx, val_idx) in enumerate(skf.split(df, y), 1):\n",
    "    print(f\"\\n===== Fold {fold}/{N_FOLDS} =====\")\n",
    "    dtr = PairDataset(df.iloc[trn_idx], y[trn_idx], MAX_LEN)\n",
    "    dvl = PairDataset(df.iloc[val_idx], y[val_idx], MAX_LEN)\n",
    "\n",
    "    model = build_headonly_model()\n",
    "\n",
    "    \n",
    "    \n",
    "    args = TrainingArguments(\n",
    "        output_dir=f\"{OUT_ROOT}/fold{fold}\",\n",
    "        num_train_epochs=EPOCHS,\n",
    "        per_device_train_batch_size=TRAIN_BS,\n",
    "        gradient_accumulation_steps=GRAD_ACC,\n",
    "        learning_rate=LR,\n",
    "        warmup_ratio=WARMUP,\n",
    "        weight_decay=0.01,\n",
    "        logging_steps=50,\n",
    "        save_strategy=\"no\",\n",
    "        report_to=\"none\",\n",
    "        remove_unused_columns=False,\n",
    "        fp16=(device==\"cuda\"),\n",
    "        dataloader_pin_memory=False,\n",
    "        seed=SEED,\n",
    "    )\n",
    "\n",
    "    trainer = Trainer(\n",
    "        model=model,\n",
    "        args=args,\n",
    "        train_dataset=dtr,\n",
    "        tokenizer=tok,\n",
    "        data_collator=collator,\n",
    "    )\n",
    "    trainer.train()\n",
    "\n",
    "    # 🔹 Save model + tokenizer for this fold\n",
    "    trainer.model.save_pretrained(f\"{OUT_ROOT}/fold{fold}\")\n",
    "    tok.save_pretrained(f\"{OUT_ROOT}/fold{fold}\")\n",
    "    print(f\"Saved fold {fold} to {OUT_ROOT}/fold{fold}\")\n",
    "\n",
    "    # ---------- OOF AUC ----------\n",
    "    model.eval()\n",
    "    dl = DataLoader(dvl, batch_size=128, shuffle=False, collate_fn=collator)\n",
    "    \n",
    "    preds = []\n",
    "    with torch.no_grad():\n",
    "        for batch in dl:\n",
    "            for k in batch:\n",
    "                batch[k] = batch[k].to(device)\n",
    "            logits_fp32 = model(**batch).logits.float()\n",
    "            logits_fp32 = torch.nan_to_num(logits_fp32, nan=0.0, posinf=1e4, neginf=-1e4)\n",
    "            prob = torch.softmax(logits_fp32, dim=1)[:, 1]\n",
    "            prob = torch.nan_to_num(prob, nan=0.5)\n",
    "            preds.append(prob.detach().cpu().numpy())\n",
    "\n",
    "    prob1 = np.concatenate(preds)\n",
    "    prob1 = np.clip(prob1, 0.0, 1.0)\n",
    "    if np.isnan(prob1).any():\n",
    "        prob1 = np.nan_to_num(prob1, nan=0.5)\n",
    "\n",
    "    oof[val_idx] = prob1\n",
    "    print(f\"Fold {fold} AUC: {roc_auc_score(y[val_idx], prob1):.4f}\")\n",
    "\n",
    "    del trainer, model, dtr, dvl, dl, preds, prob1\n",
    "    gc.collect()\n",
    "    if torch.cuda.is_available(): torch.cuda.empty_cache()\n",
    "\n",
    "print(f\"\\nOOF AUC: {roc_auc_score(y, oof):.4f}\")\n",
    "pd.DataFrame({\"oof\": oof, \"y\": y}).to_csv(f\"{OUT_ROOT}/oof.csv\", index=False)\n",
    "print(\"Saved folds under:\", OUT_ROOT)"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "databundleVersionId": 13121456,
     "sourceId": 94635,
     "sourceType": "competition"
    },
    {
     "datasetId": 6365346,
     "sourceId": 10285957,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7916512,
     "sourceId": 12643252,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 8141813,
     "sourceId": 12870970,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 8033597,
     "sourceId": 12910937,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31090,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1428.73281,
   "end_time": "2025-08-30T19:51:26.921692",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-08-30T19:27:38.188882",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "025cb5d7cf7b4d55a85a2751d229e4fc": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fc08ce1ea4c64b74a55d25d9144f6cea",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_e5fe70a5762f4eb3986b9e91aecf0b9b",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "04173fccb4ad4067923ad1cb5fb4ab9b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "075e7e8ebd3348eaba9c971f7077a7ba": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "0d8d4d61582b4ea38c7ae13ff03d5774": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "14976f532c884262beac13ee825b1191": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "1756e783d2de413986da28aad540d4b4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dae97d52bedb471db639946e8f2caa0e",
       "placeholder": "​",
       "style": "IPY_MODEL_aeb7cf9ac94844a7a3fc7dd7cd2ba2b9",
       "tabbable": null,
       "tooltip": null,
       "value": "vocab.json: "
      }
     },
     "198f092f435d41dd86a963df486baf01": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_72118446830d4a679aa2dbbdcbb0e650",
        "IPY_MODEL_ba02d4d3f08c43c592e0dffcb7034662",
        "IPY_MODEL_6fcd3e3f35b641989596d829502f8ea7"
       ],
       "layout": "IPY_MODEL_04173fccb4ad4067923ad1cb5fb4ab9b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "1e4136dc0ca9430caf5b756605bed26f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "22179fd29ead48bd80b462d705b1a454": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "27866192dd344858ba384c12e1315a47": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "290d6e9887404756b7f243ae0282f316": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "307335542a9e47ee99eb4fea86516498": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "352ba48260554ebfb58ce9ff19af8331": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3f37b85362b94aa8812990965c4e0425",
       "placeholder": "​",
       "style": "IPY_MODEL_c5c15a12889246f9a139fdee6b6fbbee",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "35f432cfa86c4377bb868bec130b5e7d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "37b32e3b7e5047459868d2fa66503c9c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3838c1670dd24bc5bd583c516689bde4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3a92acdfa6b843e3853baf52887cc282": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6a2c6ce47a794f3ca8a9df0cb370b380",
       "placeholder": "​",
       "style": "IPY_MODEL_075e7e8ebd3348eaba9c971f7077a7ba",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: "
      }
     },
     "3bebe08ccc654d2780c9050061f0aba7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3f37b85362b94aa8812990965c4e0425": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "4b83822480f94e478affbe64e525cdec": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "4f00aa156eaa42bbadbf4d7a57250d9f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1756e783d2de413986da28aad540d4b4",
        "IPY_MODEL_025cb5d7cf7b4d55a85a2751d229e4fc",
        "IPY_MODEL_91bdbf38164b4798ae74bdf7c2e8477f"
       ],
       "layout": "IPY_MODEL_6c8ee421870848baa79cc1bba6b852e9",
       "tabbable": null,
       "tooltip": null
      }
     },
     "51fa4c480be24c07b255e7e47a239441": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_92c0649420114bb4b8b007a6dc3ebdc6",
       "placeholder": "​",
       "style": "IPY_MODEL_f11a108939b1407ebe18365ac444efd3",
       "tabbable": null,
       "tooltip": null,
       "value": " 7.03M/? [00:00&lt;00:00, 145MB/s]"
      }
     },
     "594764388edb476382acdad6559dd03d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "6a2c6ce47a794f3ca8a9df0cb370b380": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6c8ee421870848baa79cc1bba6b852e9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6fcd3e3f35b641989596d829502f8ea7": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b2e556843d354059b11c440023224fec",
       "placeholder": "​",
       "style": "IPY_MODEL_37b32e3b7e5047459868d2fa66503c9c",
       "tabbable": null,
       "tooltip": null,
       "value": " 1.67M/? [00:00&lt;00:00, 77.9MB/s]"
      }
     },
     "72118446830d4a679aa2dbbdcbb0e650": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8cadea5a3aa04950a955d7cf33cdf16c",
       "placeholder": "​",
       "style": "IPY_MODEL_3838c1670dd24bc5bd583c516689bde4",
       "tabbable": null,
       "tooltip": null,
       "value": "merges.txt: "
      }
     },
     "7de70d4531254d6985e30c9b74c32932": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3bebe08ccc654d2780c9050061f0aba7",
       "max": 988097824.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_0d8d4d61582b4ea38c7ae13ff03d5774",
       "tabbable": null,
       "tooltip": null,
       "value": 988097824.0
      }
     },
     "8cadea5a3aa04950a955d7cf33cdf16c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "91bdbf38164b4798ae74bdf7c2e8477f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_cd72accad5f54541b86e861cbe8b63d2",
       "placeholder": "​",
       "style": "IPY_MODEL_594764388edb476382acdad6559dd03d",
       "tabbable": null,
       "tooltip": null,
       "value": " 2.78M/? [00:00&lt;00:00, 40.2MB/s]"
      }
     },
     "92c0649420114bb4b8b007a6dc3ebdc6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "964667c8841d442799cf325999bcc8f4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_e086a9ff05d649f4a357ae1ca03beb18",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_fb19be107ad6441e9a5374242f1180f1",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "96c8d0303e8b40d99fd70fbd9bebec5e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9aaa43294eb5443eb121a5c745afb422": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "9ae6e87c34bc4536a18526e70c7bc1aa": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_b6cae2793da345a2885e07d76ad79d64",
        "IPY_MODEL_f0ed8e3284164a42b44ffb81795cd688",
        "IPY_MODEL_e67642c52a3440939cd98e685381b3b6"
       ],
       "layout": "IPY_MODEL_dbdb75a54de84f65a470a23ad4755d8d",
       "tabbable": null,
       "tooltip": null
      }
     },
     "9c88842b220147b3a2223245a6e157b3": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "9f5ba2bd96954883ad5ff777be273a80": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_3a92acdfa6b843e3853baf52887cc282",
        "IPY_MODEL_c9a02f297dc1433ead7305a9f27bf6b3",
        "IPY_MODEL_e15c846bef904c6e8f9f0c9a71cb90ff"
       ],
       "layout": "IPY_MODEL_e4c55cffe81d4560b9d74a1234c4b15b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "a811dbcc08494647a39820f41cc3dd96": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_96c8d0303e8b40d99fd70fbd9bebec5e",
       "placeholder": "​",
       "style": "IPY_MODEL_ee1a275e21394b7f98cf1f5a7c3608bb",
       "tabbable": null,
       "tooltip": null,
       "value": " 988M/988M [00:04&lt;00:00, 310MB/s]"
      }
     },
     "aeb7cf9ac94844a7a3fc7dd7cd2ba2b9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b2e556843d354059b11c440023224fec": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "b6cae2793da345a2885e07d76ad79d64": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f0306c6c2ab341cfba4d722096b8b5e6",
       "placeholder": "​",
       "style": "IPY_MODEL_14976f532c884262beac13ee825b1191",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "ba02d4d3f08c43c592e0dffcb7034662": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_eace3be97ba24e6582aaf72da72b07be",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_f739fb41bab14009968fadeaf164ea28",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "ba53ed45a82d4ec4988cb2cf980fc1d0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bc8496487ebb4f1c9488288c41acbb46": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_d6e1a991b0fb4da988dd4a3dd07dbed9",
        "IPY_MODEL_964667c8841d442799cf325999bcc8f4",
        "IPY_MODEL_51fa4c480be24c07b255e7e47a239441"
       ],
       "layout": "IPY_MODEL_27866192dd344858ba384c12e1315a47",
       "tabbable": null,
       "tooltip": null
      }
     },
     "bd5c356243fb4a99bf233263044cd96a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c00b80bbf66949138403268ea966a032": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_352ba48260554ebfb58ce9ff19af8331",
        "IPY_MODEL_7de70d4531254d6985e30c9b74c32932",
        "IPY_MODEL_a811dbcc08494647a39820f41cc3dd96"
       ],
       "layout": "IPY_MODEL_9c88842b220147b3a2223245a6e157b3",
       "tabbable": null,
       "tooltip": null
      }
     },
     "c5c15a12889246f9a139fdee6b6fbbee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "c9a02f297dc1433ead7305a9f27bf6b3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_9aaa43294eb5443eb121a5c745afb422",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_ca22c9e9adc54b17bf65b48b42aa0073",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "ca22c9e9adc54b17bf65b48b42aa0073": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "cd72accad5f54541b86e861cbe8b63d2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "d6e1a991b0fb4da988dd4a3dd07dbed9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1e4136dc0ca9430caf5b756605bed26f",
       "placeholder": "​",
       "style": "IPY_MODEL_290d6e9887404756b7f243ae0282f316",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer.json: "
      }
     },
     "dae97d52bedb471db639946e8f2caa0e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "dbdb75a54de84f65a470a23ad4755d8d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e086a9ff05d649f4a357ae1ca03beb18": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "e15c846bef904c6e8f9f0c9a71cb90ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_35f432cfa86c4377bb868bec130b5e7d",
       "placeholder": "​",
       "style": "IPY_MODEL_bd5c356243fb4a99bf233263044cd96a",
       "tabbable": null,
       "tooltip": null,
       "value": " 7.23k/? [00:00&lt;00:00, 450kB/s]"
      }
     },
     "e4c55cffe81d4560b9d74a1234c4b15b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e5fe70a5762f4eb3986b9e91aecf0b9b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "e67642c52a3440939cd98e685381b3b6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_22179fd29ead48bd80b462d705b1a454",
       "placeholder": "​",
       "style": "IPY_MODEL_4b83822480f94e478affbe64e525cdec",
       "tabbable": null,
       "tooltip": null,
       "value": " 681/681 [00:00&lt;00:00, 89.1kB/s]"
      }
     },
     "eace3be97ba24e6582aaf72da72b07be": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "ee1a275e21394b7f98cf1f5a7c3608bb": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f0306c6c2ab341cfba4d722096b8b5e6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f0ed8e3284164a42b44ffb81795cd688": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_ba53ed45a82d4ec4988cb2cf980fc1d0",
       "max": 681.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_307335542a9e47ee99eb4fea86516498",
       "tabbable": null,
       "tooltip": null,
       "value": 681.0
      }
     },
     "f11a108939b1407ebe18365ac444efd3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f739fb41bab14009968fadeaf164ea28": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fb19be107ad6441e9a5374242f1180f1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "fc08ce1ea4c64b74a55d25d9144f6cea": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
