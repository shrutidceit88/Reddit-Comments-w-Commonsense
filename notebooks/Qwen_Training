{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ea788e03",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-08-30T20:31:49.177642Z",
     "iopub.status.busy": "2025-08-30T20:31:49.177368Z",
     "iopub.status.idle": "2025-08-30T20:31:50.661052Z",
     "shell.execute_reply": "2025-08-30T20:31:50.660379Z"
    },
    "papermill": {
     "duration": 1.488296,
     "end_time": "2025-08-30T20:31:50.662782",
     "exception": false,
     "start_time": "2025-08-30T20:31:49.174486",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model.safetensors.index.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00003-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/config.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/merges.txt\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00001-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/tokenizer.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/vocab.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/tokenizer_config.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/chat_template.jinja\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00004-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/special_tokens_map.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/model-00002-of-00004.safetensors\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/added_tokens.json\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/Modelfile\n",
      "/kaggle/input/qwen2-7b-instruct-merged-v2/qwen2-7b-instruct-merged_v2/generation_config.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/__huggingface_repos__.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/model.safetensors.index.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/config.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/merges.txt\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/model-00001-of-00002.safetensors\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/LICENSE\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/model-00002-of-00002.safetensors\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/README.md\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/tokenizer.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/vocab.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.gitattributes\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/generation_config.json\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/.gitignore\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer_config.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/LICENSE.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/merges.txt.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model.safetensors.index.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model.safetensors.index.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/tokenizer_config.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/.gitattributes.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/merges.txt.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/config.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00001-of-00002.safetensors.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/generation_config.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/vocab.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/.gitattributes.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00001-of-00002.safetensors.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00002-of-00002.safetensors.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/generation_config.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/vocab.json.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/config.json.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/LICENSE.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/README.md.metadata\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/README.md.lock\n",
      "/kaggle/input/qwen2-5-0-5b-instruct/Qwen3-1.7B/.cache/huggingface/download/model-00002-of-00002.safetensors.lock\n",
      "/kaggle/input/jigsaw-agile-community-rules/sample_submission.csv\n",
      "/kaggle/input/jigsaw-agile-community-rules/train.csv\n",
      "/kaggle/input/jigsaw-agile-community-rules/test.csv\n",
      "/kaggle/input/qwen2-5-0-5b/config.json\n",
      "/kaggle/input/qwen2-5-0-5b/merges.txt\n",
      "/kaggle/input/qwen2-5-0-5b/LICENSE\n",
      "/kaggle/input/qwen2-5-0-5b/README.md\n",
      "/kaggle/input/qwen2-5-0-5b/tokenizer.json\n",
      "/kaggle/input/qwen2-5-0-5b/vocab.json\n",
      "/kaggle/input/qwen2-5-0-5b/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-0-5b/model.safetensors\n",
      "/kaggle/input/qwen2-5-0-5b/.gitattributes\n",
      "/kaggle/input/qwen2-5-0-5b/generation_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/finetune.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/__huggingface_repos__.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/requirements.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/runs/Jul31_16-45-02_55092aac9317/events.out.tfevents.1753980309.55092aac9317.383.0\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/runs/Jul31_15-39-22_55092aac9317/events.out.tfevents.1753976368.55092aac9317.105.0\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/trainer_state.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/training_args.bin\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/scaler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/chat_template.jinja\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/scheduler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/optimizer.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/rng_state.pth\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-500/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/trainer_state.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/training_args.bin\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/scaler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/chat_template.jinja\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/scheduler.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/optimizer.pt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/rng_state.pth\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/outputs/checkpoint-993/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/chat_template.jinja\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Chat-LeetCode/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/adapter_model.safetensors\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/merges.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/adapter_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/README.md\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/tokenizer.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/vocab.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/tokenizer_config.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/special_tokens_map.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/Qwen2.5-Coder-0.5B-Base-Sequence-LeetCode/added_tokens.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothCPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothXPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothAlignPropTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothKTOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothOnlineDPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothPPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothGKDTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothRLOOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothSFTTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothORPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothGRPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothDPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothBCOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothRewardTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothPRMTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothIterativeSFTTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothDDPOTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/unsloth_compiled_cache/UnslothNashMDTrainer.py\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/run-hw5zv8tr.wandb\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/logs/debug.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/logs/debug-internal.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/wandb-summary.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/config.yaml\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/output.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/requirements.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_153856-hw5zv8tr/files/wandb-metadata.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/run-m41n1c6s.wandb\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/logs/debug.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/logs/debug-internal.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/wandb-summary.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/config.yaml\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/output.log\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/requirements.txt\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/wandb/run-20250731_164447-m41n1c6s/files/wandb-metadata.json\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/31349551d90c7606f325fe0f11bbb8bd5fa0d7c7.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/c8dd4c904ea9bfc3cbaaa50075c13a9a1dab52c9.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/4783fe10ac3adce15ac8f358ef5462739852c569.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/630e242dd9b9ba3ac98f68aecd23f65ec95efa7e.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/c2aa2851ea30d00c2c99a92741925741fb894100.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/.locks/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/2f2f7ed8cf1b5a91f2bbb383cb767e679c0a6aed.lock\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/refs/main\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/31349551d90c7606f325fe0f11bbb8bd5fa0d7c7\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/630e242dd9b9ba3ac98f68aecd23f65ec95efa7e\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/c2aa2851ea30d00c2c99a92741925741fb894100\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/2f2f7ed8cf1b5a91f2bbb383cb767e679c0a6aed\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/c8dd4c904ea9bfc3cbaaa50075c13a9a1dab52c9\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/blobs/4783fe10ac3adce15ac8f358ef5462739852c569\n",
      "/kaggle/input/qwen2-5-coder-1-5b-base-sequence-lv2/huggingface_tokenizers_cache/models--unsloth--qwen2.5-coder-0.5b-bnb-4bit/.no_exist/6a59d74d1eaf2f3687e7caa03723f01ace6cdafb/chat_template.jinja\n"
     ]
    }
   ],
   "source": [
    "import numpy as np \n",
    "import pandas as pd \n",
    "import os\n",
    "\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5729bfb7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-30T20:31:50.668785Z",
     "iopub.status.busy": "2025-08-30T20:31:50.668483Z",
     "iopub.status.idle": "2025-08-30T20:56:29.351672Z",
     "shell.execute_reply": "2025-08-30T20:56:29.350886Z"
    },
    "papermill": {
     "duration": 1478.687517,
     "end_time": "2025-08-30T20:56:29.352955",
     "exception": false,
     "start_time": "2025-08-30T20:31:50.665438",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m43.7/43.7 kB\u001b[0m \u001b[31m2.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.5/9.5 MB\u001b[0m \u001b[31m75.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m315.1/315.1 kB\u001b[0m \u001b[31m27.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m3.6/3.6 MB\u001b[0m \u001b[31m99.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m94.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m47.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m38.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m2.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m31.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m13.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m8.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m74.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25h"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2025-08-30 20:33:23.398229: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "E0000 00:00:1756586003.580902      19 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "E0000 00:00:1756586003.632805      19 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "c773db2de3bb42c59346546fca53ad2c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer_config.json: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "f226555966994600bc48b62b4553451c",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "vocab.json: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "8b88d513f6bd4acd987c7622e4087ff0",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "merges.txt: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "3050b8108a6f421c9f050e2ef426a33d",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "tokenizer.json: 0.00B [00:00, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "===== Fold 1/5 =====\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "72e080f6a853425fb12bf42696fcd155",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "config.json:   0%|          | 0.00/681 [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "7275783d1e8143d0a0673596aed7eaf4",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "model.safetensors:   0%|          | 0.00/988M [00:00<?, ?B/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 03:58, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>3.530500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.107900</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 1 to /kaggle/working/qwen25_ce_headonly/fold1\n",
      "Fold 1 AUC: 0.5775\n",
      "\n",
      "===== Fold 2/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 04:00, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>5.055600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.854700</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 2 to /kaggle/working/qwen25_ce_headonly/fold2\n",
      "Fold 2 AUC: 0.5742\n",
      "\n",
      "===== Fold 3/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 04:01, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>5.256400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.889400</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 3 to /kaggle/working/qwen25_ce_headonly/fold3\n",
      "Fold 3 AUC: 0.5723\n",
      "\n",
      "===== Fold 4/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 04:00, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>4.976000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.757200</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 4 to /kaggle/working/qwen25_ce_headonly/fold4\n",
      "Fold 4 AUC: 0.5244\n",
      "\n",
      "===== Fold 5/5 =====\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Some weights of Qwen2ForSequenceClassification were not initialized from the model checkpoint at Qwen/Qwen2.5-0.5B and are newly initialized: ['score.weight']\n",
      "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "\n",
       "    <div>\n",
       "      \n",
       "      <progress value='100' max='100' style='width:300px; height:20px; vertical-align: middle;'></progress>\n",
       "      [100/100 04:00, Epoch 1/2]\n",
       "    </div>\n",
       "    <table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       " <tr style=\"text-align: left;\">\n",
       "      <th>Step</th>\n",
       "      <th>Training Loss</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>50</td>\n",
       "      <td>5.168900</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>100</td>\n",
       "      <td>2.900900</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table><p>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saved fold 5 to /kaggle/working/qwen25_ce_headonly/fold5\n",
      "Fold 5 AUC: 0.5331\n",
      "\n",
      "OOF AUC: 0.5551\n",
      "Saved folds under: /kaggle/working/qwen25_ce_headonly\n"
     ]
    }
   ],
   "source": [
    "# ===== Qwen2.5-0.5B cross-encoder, head-only training, 5-fold =====\n",
    "!pip -q install \"transformers==4.44.2\" \"accelerate==0.33.0\"\n",
    "\n",
    "import os, gc, warnings\n",
    "warnings.filterwarnings(\"ignore\")\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "from sklearn.model_selection import StratifiedKFold\n",
    "from sklearn.metrics import roc_auc_score\n",
    "\n",
    "import torch\n",
    "from torch.utils.data import Dataset, DataLoader\n",
    "\n",
    "from transformers import (\n",
    "    AutoTokenizer,\n",
    "    AutoModelForSequenceClassification,\n",
    "    DataCollatorWithPadding,\n",
    "    Trainer,\n",
    "    TrainingArguments,\n",
    "    set_seed,\n",
    ")\n",
    "\n",
    "# ---------------- Config ----------------\n",
    "DATA_DIR  = \"/kaggle/input/jigsaw-agile-community-rules\"\n",
    "TRAIN_CSV = f\"{DATA_DIR}/train.csv\"\n",
    "\n",
    "MODEL_ID  = \"Qwen/Qwen2.5-0.5B\"    # small & stable\n",
    "OUT_ROOT  = \"/kaggle/working/qwen25_ce_headonly\"\n",
    "os.makedirs(OUT_ROOT, exist_ok=True)\n",
    "\n",
    "SEED=42; N_FOLDS=5\n",
    "MAX_LEN=256\n",
    "EPOCHS=2\n",
    "TRAIN_BS=4\n",
    "GRAD_ACC=4\n",
    "LR=2e-4\n",
    "WARMUP=0.05\n",
    "\n",
    "set_seed(SEED)\n",
    "device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n",
    "\n",
    "# ------------- Build paired inputs -------------\n",
    "def _clip(x):\n",
    "    x = \"\" if pd.isna(x) else str(x).strip()\n",
    "    return x if 0 < len(x) < 300 else \"\"\n",
    "\n",
    "def build_text_a(row):\n",
    "    sub  = str(row[\"subreddit\"])\n",
    "    rule = str(row[\"rule\"])\n",
    "    pos1 = _clip(row.get(\"positive_example_1\",\"\"))\n",
    "    neg1 = _clip(row.get(\"negative_example_1\",\"\"))\n",
    "    parts = [f\"r/{sub}\", f\"Rule: {rule}\"]\n",
    "    if pos1: parts.append(f\"Yes: {pos1}\")\n",
    "    if neg1: parts.append(f\"No: {neg1}\")\n",
    "    return \" | \".join(parts)\n",
    "\n",
    "def prepare_df(df):\n",
    "    df = df.copy()\n",
    "    df[\"text_a\"] = df.apply(build_text_a, axis=1)\n",
    "    df[\"text_b\"] = df[\"body\"].astype(str)\n",
    "    return df\n",
    "\n",
    "df = pd.read_csv(TRAIN_CSV)\n",
    "df = prepare_df(df)\n",
    "y  = df[\"rule_violation\"].astype(int).values\n",
    "\n",
    "# ------------- Tokenizer (set PAD) -------------\n",
    "tok = AutoTokenizer.from_pretrained(MODEL_ID, use_fast=True, trust_remote_code=True)\n",
    "# Use EOS as PAD if PAD missing\n",
    "if tok.pad_token is None:\n",
    "    if tok.eos_token is None:\n",
    "        tok.add_special_tokens({\"eos_token\":\"</s>\"})\n",
    "    tok.pad_token = tok.eos_token\n",
    "tok.padding_side = \"right\"  # OK for seq cls\n",
    "\n",
    "collator = DataCollatorWithPadding(tokenizer=tok)\n",
    "\n",
    "# ------------- Dataset -------------\n",
    "class PairDataset(Dataset):\n",
    "    def __init__(self, df, labels=None, max_len=256):\n",
    "        self.a = df[\"text_a\"].tolist()\n",
    "        self.b = df[\"text_b\"].tolist()\n",
    "        self.labels = labels\n",
    "        self.max_len = max_len\n",
    "    def __len__(self): return len(self.a)\n",
    "    def __getitem__(self, i):\n",
    "        item = tok(self.a[i], self.b[i], truncation=True, max_length=self.max_len)\n",
    "        if self.labels is not None:\n",
    "            item[\"labels\"] = torch.tensor(int(self.labels[i]), dtype=torch.long)  # <-- important\n",
    "        return item\n",
    "\n",
    "# ------------- Model builder (freeze base, train head) -------------\n",
    "def build_headonly_model():\n",
    "    model = AutoModelForSequenceClassification.from_pretrained(\n",
    "        MODEL_ID,\n",
    "        num_labels=2,\n",
    "        trust_remote_code=True,\n",
    "        torch_dtype=torch.float32,\n",
    "    )\n",
    "    model.config.use_cache = False\n",
    "\n",
    "    # ensure PAD token id is set\n",
    "    model.config.pad_token_id = tok.pad_token_id\n",
    "    model.config.problem_type = \"single_label_classification\"\n",
    "\n",
    "    # keep embeddings in sync if special tokens were added\n",
    "    if model.get_input_embeddings().num_embeddings != len(tok):\n",
    "        model.resize_token_embeddings(len(tok))\n",
    "\n",
    "    # build fresh classifier head in SAME dtype/device as the base model\n",
    "    # base_dtype  = next(model.parameters()).dtype\n",
    "    # base_device = next(model.parameters()).device\n",
    "    hidden = model.config.hidden_size\n",
    "\n",
    "    model.score = torch.nn.Linear(hidden, 2) # , bias=True, device=base_device, dtype=base_dtype\n",
    "    torch.nn.init.xavier_uniform_(model.score.weight)\n",
    "    torch.nn.init.zeros_(model.score.bias)\n",
    "\n",
    "    # freeze everything except the classifier head\n",
    "    for n, p in model.named_parameters():\n",
    "        p.requires_grad = (\"score\" in n)\n",
    "\n",
    "    return model.to(device)\n",
    "\n",
    "\n",
    "\n",
    "# ------------- CV Train -------------\n",
    "skf = StratifiedKFold(n_splits=N_FOLDS, shuffle=True, random_state=SEED)\n",
    "oof = np.zeros(len(df), dtype=float)\n",
    "\n",
    "for fold, (trn_idx, val_idx) in enumerate(skf.split(df, y), 1):\n",
    "    print(f\"\\n===== Fold {fold}/{N_FOLDS} =====\")\n",
    "    dtr = PairDataset(df.iloc[trn_idx], y[trn_idx], MAX_LEN)\n",
    "    dvl = PairDataset(df.iloc[val_idx], y[val_idx], MAX_LEN)\n",
    "\n",
    "    model = build_headonly_model()\n",
    "\n",
    "    \n",
    "    \n",
    "    args = TrainingArguments(\n",
    "        output_dir=f\"{OUT_ROOT}/fold{fold}\",\n",
    "        num_train_epochs=EPOCHS,\n",
    "        per_device_train_batch_size=TRAIN_BS,\n",
    "        gradient_accumulation_steps=GRAD_ACC,\n",
    "        learning_rate=LR,\n",
    "        warmup_ratio=WARMUP,\n",
    "        weight_decay=0.01,\n",
    "        logging_steps=50,\n",
    "        save_strategy=\"no\",\n",
    "        report_to=\"none\",\n",
    "        remove_unused_columns=False,\n",
    "        fp16=(device==\"cuda\"),\n",
    "        dataloader_pin_memory=False,\n",
    "        seed=SEED,\n",
    "    )\n",
    "\n",
    "    trainer = Trainer(\n",
    "        model=model,\n",
    "        args=args,\n",
    "        train_dataset=dtr,\n",
    "        tokenizer=tok,\n",
    "        data_collator=collator,\n",
    "    )\n",
    "    trainer.train()\n",
    "\n",
    "    # 🔹 Save model + tokenizer for this fold\n",
    "    trainer.model.save_pretrained(f\"{OUT_ROOT}/fold{fold}\")\n",
    "    tok.save_pretrained(f\"{OUT_ROOT}/fold{fold}\")\n",
    "    print(f\"Saved fold {fold} to {OUT_ROOT}/fold{fold}\")\n",
    "\n",
    "    # ---------- OOF AUC ----------\n",
    "    model.eval()\n",
    "    dl = DataLoader(dvl, batch_size=128, shuffle=False, collate_fn=collator)\n",
    "    \n",
    "    preds = []\n",
    "    with torch.no_grad():\n",
    "        for batch in dl:\n",
    "            for k in batch:\n",
    "                batch[k] = batch[k].to(device)\n",
    "            logits_fp32 = model(**batch).logits.float()\n",
    "            logits_fp32 = torch.nan_to_num(logits_fp32, nan=0.0, posinf=1e4, neginf=-1e4)\n",
    "            prob = torch.softmax(logits_fp32, dim=1)[:, 1]\n",
    "            prob = torch.nan_to_num(prob, nan=0.5)\n",
    "            preds.append(prob.detach().cpu().numpy())\n",
    "\n",
    "    prob1 = np.concatenate(preds)\n",
    "    prob1 = np.clip(prob1, 0.0, 1.0)\n",
    "    if np.isnan(prob1).any():\n",
    "        prob1 = np.nan_to_num(prob1, nan=0.5)\n",
    "\n",
    "    oof[val_idx] = prob1\n",
    "    print(f\"Fold {fold} AUC: {roc_auc_score(y[val_idx], prob1):.4f}\")\n",
    "\n",
    "    del trainer, model, dtr, dvl, dl, preds, prob1\n",
    "    gc.collect()\n",
    "    if torch.cuda.is_available(): torch.cuda.empty_cache()\n",
    "\n",
    "print(f\"\\nOOF AUC: {roc_auc_score(y, oof):.4f}\")\n",
    "pd.DataFrame({\"oof\": oof, \"y\": y}).to_csv(f\"{OUT_ROOT}/oof.csv\", index=False)\n",
    "print(\"Saved folds under:\", OUT_ROOT)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "121dad39",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-08-30T20:56:29.399647Z",
     "iopub.status.busy": "2025-08-30T20:56:29.398984Z",
     "iopub.status.idle": "2025-08-30T20:56:29.424077Z",
     "shell.execute_reply": "2025-08-30T20:56:29.423254Z"
    },
    "papermill": {
     "duration": 0.049193,
     "end_time": "2025-08-30T20:56:29.425077",
     "exception": false,
     "start_time": "2025-08-30T20:56:29.375884",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/working/qwen25_ce_headonly:\n",
      "fold1\n",
      "fold2\n",
      "fold3\n",
      "fold4\n",
      "fold5\n",
      "oof.csv\n",
      "\n",
      "/kaggle/working/qwen25_ce_headonly/fold1:\n",
      "added_tokens.json\n",
      "config.json\n",
      "merges.txt\n",
      "model.safetensors\n",
      "special_tokens_map.json\n",
      "tokenizer_config.json\n",
      "tokenizer.json\n",
      "vocab.json\n",
      "\n",
      "/kaggle/working/qwen25_ce_headonly/fold2:\n",
      "added_tokens.json\n",
      "config.json\n",
      "merges.txt\n",
      "model.safetensors\n",
      "special_tokens_map.json\n",
      "tokenizer_config.json\n",
      "tokenizer.json\n",
      "vocab.json\n",
      "\n",
      "/kaggle/working/qwen25_ce_headonly/fold3:\n",
      "added_tokens.json\n",
      "config.json\n",
      "merges.txt\n",
      "model.safetensors\n",
      "special_tokens_map.json\n",
      "tokenizer_config.json\n",
      "tokenizer.json\n",
      "vocab.json\n",
      "\n",
      "/kaggle/working/qwen25_ce_headonly/fold4:\n",
      "added_tokens.json\n",
      "config.json\n",
      "merges.txt\n",
      "model.safetensors\n",
      "special_tokens_map.json\n",
      "tokenizer_config.json\n",
      "tokenizer.json\n",
      "vocab.json\n",
      "\n",
      "/kaggle/working/qwen25_ce_headonly/fold5:\n",
      "added_tokens.json\n",
      "config.json\n",
      "merges.txt\n",
      "model.safetensors\n",
      "special_tokens_map.json\n",
      "tokenizer_config.json\n",
      "tokenizer.json\n",
      "vocab.json\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "CompletedProcess(args=['bash', '-lc', \"ls -R /kaggle/working/qwen25_ce_headonly | sed -n '1,200p'\"], returncode=0)"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import os, subprocess, textwrap\n",
    "subprocess.run([\"bash\",\"-lc\",\"ls -R /kaggle/working/qwen25_ce_headonly | sed -n '1,200p'\"])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c8cf610d",
   "metadata": {
    "papermill": {
     "duration": 0.022817,
     "end_time": "2025-08-30T20:56:29.470741",
     "exception": false,
     "start_time": "2025-08-30T20:56:29.447924",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "databundleVersionId": 13121456,
     "sourceId": 94635,
     "sourceType": "competition"
    },
    {
     "datasetId": 6365346,
     "sourceId": 10285957,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7916512,
     "sourceId": 12643252,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 8141813,
     "sourceId": 12870970,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 8033597,
     "sourceId": 12910937,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 31090,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 1487.718752,
   "end_time": "2025-08-30T20:56:33.069089",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-08-30T20:31:45.350337",
   "version": "2.6.0"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "07939de7c7664aff84aa7529531d013c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_997bab84766f470e82fc7b28739ae51c",
       "max": 988097824.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_dac443b55b0849419e418d296f875040",
       "tabbable": null,
       "tooltip": null,
       "value": 988097824.0
      }
     },
     "17d19d80d1a642f98fe7bd97d33d5578": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_dd83fafeef114fb1ba37f9055ac66450",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_bd2679ade7da4464acce34e10a1dd610",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "1a73942c73b74bd1be09acd12d94a884": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_c520c3cfb9b44703897898a448134fb2",
       "placeholder": "​",
       "style": "IPY_MODEL_b59886b47fb6436bbfa8b7870bb50b0c",
       "tabbable": null,
       "tooltip": null,
       "value": "vocab.json: "
      }
     },
     "1afa46f417614fb28fee3b7e78a0bfb0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "1fd294f4680c4012896bb864c4f7b86e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_4e96042fa2544ad8a6359ac07396d50a",
       "placeholder": "​",
       "style": "IPY_MODEL_e7c79ccbcf06435baa256b823a6eb060",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer.json: "
      }
     },
     "220ad29813104595aae918c2139b04aa": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "2708876fa74b401d817b4fb969e9b267": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "3050b8108a6f421c9f050e2ef426a33d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1fd294f4680c4012896bb864c4f7b86e",
        "IPY_MODEL_17d19d80d1a642f98fe7bd97d33d5578",
        "IPY_MODEL_d6a886461896469180fd1c0f4b3eac86"
       ],
       "layout": "IPY_MODEL_e2e38467bd8b4d5d85ce1a7645ed993e",
       "tabbable": null,
       "tooltip": null
      }
     },
     "305287b1c64f4195929bf5d057f5d1d5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "31ab91eec6e74ba88890a54af9b3f04b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "3377425c3577442fb8f74f49771fc74b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "387b56820d214a0b8d68a8fe205271ad": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "3f81ed7dd98a44f5814981738fc9ca9c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "44ab6d02220b4d1b9b08718528243a0f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5e20215fde15447490e416766f22099e",
       "max": 681.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2708876fa74b401d817b4fb969e9b267",
       "tabbable": null,
       "tooltip": null,
       "value": 681.0
      }
     },
     "4e96042fa2544ad8a6359ac07396d50a": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "55cd27a3cc2846769a0464de2be82371": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "5d1e5b9daf2a4d3caaed22cc014e4735": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5e20215fde15447490e416766f22099e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "5fcba3889fea4e8a8198202f412ec454": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "619f7138c0fd478285cc36ecac081f05": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "63cd219216c54718bfc11e5100e16360": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6fae38130429459b97a204025659c51f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6fb6e9d1a381455da7e06d0d1c0b371c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_5d1e5b9daf2a4d3caaed22cc014e4735",
       "placeholder": "​",
       "style": "IPY_MODEL_7302c72865394d4aab1e1e0deaaa8eda",
       "tabbable": null,
       "tooltip": null,
       "value": " 988M/988M [00:04&lt;00:00, 400MB/s]"
      }
     },
     "6fe430e2569e4fd6acaf4319aa9a437d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_305287b1c64f4195929bf5d057f5d1d5",
       "placeholder": "​",
       "style": "IPY_MODEL_31ab91eec6e74ba88890a54af9b3f04b",
       "tabbable": null,
       "tooltip": null,
       "value": "merges.txt: "
      }
     },
     "702ce1fe0db644f3afdf915551d2d3d4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "7192d6ebbe894df1aa67572aea099eee": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7275783d1e8143d0a0673596aed7eaf4": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_7e6516f368564181933002ee8e9aca87",
        "IPY_MODEL_07939de7c7664aff84aa7529531d013c",
        "IPY_MODEL_6fb6e9d1a381455da7e06d0d1c0b371c"
       ],
       "layout": "IPY_MODEL_702ce1fe0db644f3afdf915551d2d3d4",
       "tabbable": null,
       "tooltip": null
      }
     },
     "72e080f6a853425fb12bf42696fcd155": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_a6cd9b59dd894196837c9e9c1f0d304b",
        "IPY_MODEL_44ab6d02220b4d1b9b08718528243a0f",
        "IPY_MODEL_7f1551ab491c4149977742b153d41e8d"
       ],
       "layout": "IPY_MODEL_220ad29813104595aae918c2139b04aa",
       "tabbable": null,
       "tooltip": null
      }
     },
     "72f96c8245d740f0b76f55ec3c3a1cc5": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_1afa46f417614fb28fee3b7e78a0bfb0",
       "placeholder": "​",
       "style": "IPY_MODEL_7192d6ebbe894df1aa67572aea099eee",
       "tabbable": null,
       "tooltip": null,
       "value": " 1.67M/? [00:00&lt;00:00, 79.0MB/s]"
      }
     },
     "7302c72865394d4aab1e1e0deaaa8eda": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "760895cef89844c8a95cd24ec1dac63f": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_fcf3bbb199b14f86a4fd1562ef92f61d",
       "placeholder": "​",
       "style": "IPY_MODEL_92649ba55e104a2dbb3db84c2c26de37",
       "tabbable": null,
       "tooltip": null,
       "value": " 2.78M/? [00:00&lt;00:00, 43.3MB/s]"
      }
     },
     "78a659aa162d43df84d5f7606f3ade9b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7e6516f368564181933002ee8e9aca87": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f9095cd635ab4d238fff51d6854d1aae",
       "placeholder": "​",
       "style": "IPY_MODEL_8aee35547f9445a9b231e96987405bcf",
       "tabbable": null,
       "tooltip": null,
       "value": "model.safetensors: 100%"
      }
     },
     "7f1551ab491c4149977742b153d41e8d": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_3f81ed7dd98a44f5814981738fc9ca9c",
       "placeholder": "​",
       "style": "IPY_MODEL_5fcba3889fea4e8a8198202f412ec454",
       "tabbable": null,
       "tooltip": null,
       "value": " 681/681 [00:00&lt;00:00, 93.1kB/s]"
      }
     },
     "82ca3781217a40f7acef3a2c6ecc8c38": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_63cd219216c54718bfc11e5100e16360",
       "placeholder": "​",
       "style": "IPY_MODEL_f29b809f85f04cdc92d8a1b75ff46074",
       "tabbable": null,
       "tooltip": null,
       "value": "tokenizer_config.json: "
      }
     },
     "8357cbe493e04cf1abe7a33c80056e0b": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "8ab10540ba644a1193c5ad2acdf29622": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "8aee35547f9445a9b231e96987405bcf": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "8b88d513f6bd4acd987c7622e4087ff0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_6fe430e2569e4fd6acaf4319aa9a437d",
        "IPY_MODEL_9232314e54bb405f9ad9b9d5815d7b79",
        "IPY_MODEL_72f96c8245d740f0b76f55ec3c3a1cc5"
       ],
       "layout": "IPY_MODEL_387b56820d214a0b8d68a8fe205271ad",
       "tabbable": null,
       "tooltip": null
      }
     },
     "8c2cd78c50024ec8be74ed7685fb022c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_8357cbe493e04cf1abe7a33c80056e0b",
       "placeholder": "​",
       "style": "IPY_MODEL_619f7138c0fd478285cc36ecac081f05",
       "tabbable": null,
       "tooltip": null,
       "value": " 7.23k/? [00:00&lt;00:00, 702kB/s]"
      }
     },
     "9232314e54bb405f9ad9b9d5815d7b79": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_55cd27a3cc2846769a0464de2be82371",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_8ab10540ba644a1193c5ad2acdf29622",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "92649ba55e104a2dbb3db84c2c26de37": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "978888ed85cf47e3b6393c8cddfbf6f7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "997bab84766f470e82fc7b28739ae51c": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a6737ffb5d1549f89583a79c62903fa7": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "a6cd9b59dd894196837c9e9c1f0d304b": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_978888ed85cf47e3b6393c8cddfbf6f7",
       "placeholder": "​",
       "style": "IPY_MODEL_feba4ce08bfa48ccb754151bb5c3c4ac",
       "tabbable": null,
       "tooltip": null,
       "value": "config.json: 100%"
      }
     },
     "aeca0a266a3144e48b527add3b3c2c51": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "b59886b47fb6436bbfa8b7870bb50b0c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "b6b2af1fad5f4769b0b7d6db64051acd": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "bd2679ade7da4464acce34e10a1dd610": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "c520c3cfb9b44703897898a448134fb2": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c773db2de3bb42c59346546fca53ad2c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_82ca3781217a40f7acef3a2c6ecc8c38",
        "IPY_MODEL_cd7cc4905d7f4a1383f6473a01af9ce0",
        "IPY_MODEL_8c2cd78c50024ec8be74ed7685fb022c"
       ],
       "layout": "IPY_MODEL_3377425c3577442fb8f74f49771fc74b",
       "tabbable": null,
       "tooltip": null
      }
     },
     "cd7cc4905d7f4a1383f6473a01af9ce0": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_eccf956620a9426595d674ee6263bea4",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_d6d22d1f6cb04ee8bcd3a5117476e077",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "d6a886461896469180fd1c0f4b3eac86": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_a6737ffb5d1549f89583a79c62903fa7",
       "placeholder": "​",
       "style": "IPY_MODEL_78a659aa162d43df84d5f7606f3ade9b",
       "tabbable": null,
       "tooltip": null,
       "value": " 7.03M/? [00:00&lt;00:00, 154MB/s]"
      }
     },
     "d6d22d1f6cb04ee8bcd3a5117476e077": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "dac443b55b0849419e418d296f875040": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "dd83fafeef114fb1ba37f9055ac66450": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "e2e38467bd8b4d5d85ce1a7645ed993e": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "e7c79ccbcf06435baa256b823a6eb060": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "e8b447ddccca44bbb006a46ccaa332f3": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "success",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_b6b2af1fad5f4769b0b7d6db64051acd",
       "max": 1.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_aeca0a266a3144e48b527add3b3c2c51",
       "tabbable": null,
       "tooltip": null,
       "value": 1.0
      }
     },
     "eccf956620a9426595d674ee6263bea4": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": "20px"
      }
     },
     "f226555966994600bc48b62b4553451c": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_1a73942c73b74bd1be09acd12d94a884",
        "IPY_MODEL_e8b447ddccca44bbb006a46ccaa332f3",
        "IPY_MODEL_760895cef89844c8a95cd24ec1dac63f"
       ],
       "layout": "IPY_MODEL_6fae38130429459b97a204025659c51f",
       "tabbable": null,
       "tooltip": null
      }
     },
     "f29b809f85f04cdc92d8a1b75ff46074": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "f9095cd635ab4d238fff51d6854d1aae": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fcf3bbb199b14f86a4fd1562ef92f61d": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "feba4ce08bfa48ccb754151bb5c3c4ac": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
